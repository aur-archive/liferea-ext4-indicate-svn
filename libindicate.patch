Index: liferea/src/Makefile.am
===================================================================
--- liferea/src/Makefile.am	(revision 5359)
+++ liferea/src/Makefile.am	(working copy)
@@ -90,3 +90,9 @@
 liferea_LDADD += notification/libnotify.a $(LIBNOTIFY_LIBS)
 
 endif
+
+if WITH_LIBINDICATE
+
+liferea_LDADD += $(LIBINDICATE_LIBS)
+
+endif
Index: liferea/src/ui/ui_tray.c
===================================================================
--- liferea/src/ui/ui_tray.c	(revision 5359)
+++ liferea/src/ui/ui_tray.c	(working copy)
@@ -31,6 +31,7 @@
 #include "net_monitor.h"
 #include "ui/liferea_shell.h"
 #include "ui/icons.h"
+#include "ui/ui_indicator.h"
 #include "ui/ui_popup.h"
 #include "ui/ui_tray.h"
 
@@ -194,10 +195,19 @@
 {
 	gint	newItems, unreadItems;
 	gchar	*msg, *tmp;
-	
+
+	ui_indicator_update ();
+
 	if (!trayIcon_priv)
 		return;
 
+	if (ui_indicator_is_visible ()) {
+		gtk_status_icon_set_visible (trayIcon_priv->status_icon, FALSE);
+		return;
+	} else {
+		gtk_status_icon_set_visible (trayIcon_priv->status_icon, TRUE);
+	}
+
 	newItems = feedlist_get_new_item_count ();
 	unreadItems = feedlist_get_unread_item_count ();
 		
Index: liferea/src/ui/liferea_shell.c
===================================================================
--- liferea/src/ui/liferea_shell.c	(revision 5359)
+++ liferea/src/ui/liferea_shell.c	(working copy)
@@ -45,6 +45,7 @@
 #include "ui/liferea_dialog.h"
 #include "ui/search_dialog.h"
 #include "ui/ui_common.h"
+#include "ui/ui_indicator.h"
 #include "ui/ui_prefs.h"
 #include "ui/ui_session.h"
 #include "ui/ui_tray.h"
@@ -502,7 +503,7 @@
 
 	conf_get_bool_value (DONT_MINIMIZE_TO_TRAY, &dont_maximize_to_tray);
 
-	if ((ui_tray_get_count() == 0) || dont_maximize_to_tray) {
+	if (!ui_indicator_is_visible () && (ui_tray_get_count() == 0 || dont_maximize_to_tray)) {
 		liferea_shutdown ();
 		return TRUE;
 	}
@@ -1196,6 +1197,8 @@
 	conf_get_bool_value (SHOW_TRAY_ICON, &show_tray_icon);
 
 	ui_tray_enable (show_tray_icon);		/* init tray icon */
+	
+	ui_indicator_init ();
 
 	liferea_shell_restore_state ();
 	
@@ -1268,6 +1271,7 @@
 {
 	feed_list_view_select (NULL);
 	liferea_shell_save_position ();
+	ui_indicator_destroy ();
 	ui_tray_enable (FALSE);
 	g_object_unref (shell->priv->tabs);
 	g_object_unref (shell->priv->feedlist);
Index: liferea/src/ui/ui_indicator.c
===================================================================
--- liferea/src/ui/ui_indicator.c	(revision 0)
+++ liferea/src/ui/ui_indicator.c	(revision 0)
@@ -0,0 +1,159 @@
+/*
+ * @file ui_indicator.c  libindicate support
+ *
+ * Copyright (C) 2010 Maia Kozheva <sikon@ubuntu.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Library General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor Boston, MA 02110-1301,  USA
+ */
+
+#include "ui_indicator.h"
+
+#ifdef HAVE_LIBINDICATE
+
+#include <gtk/gtk.h>
+#include <libindicate/server.h>
+#include <libindicate/indicator.h>
+#include "ui_tray.h"
+#include "feedlist.h"
+#include "vfolder.h"
+
+static struct indicator_priv {
+	IndicateServer *server;
+	gboolean visible;
+	GPtrArray *indicators;
+} *indicator_priv = NULL;
+
+static const char * DESKTOP_FILE = PACKAGE_DATA_DIR G_DIR_SEPARATOR_S "applications" G_DIR_SEPARATOR_S "liferea.desktop";
+
+static void
+on_indicator_server_clicked (IndicateServer *server, gchar *type, gpointer user_data)
+{
+	liferea_shell_present ();
+}
+
+static void
+on_indicator_server_shown (IndicateServer *server, gchar *type, gpointer user_data)
+{
+	indicator_priv->visible = TRUE;
+	ui_tray_update ();
+}
+
+static void
+on_indicator_server_hidden (IndicateServer *server, gchar *type, gpointer user_data)
+{
+	indicator_priv->visible = FALSE;
+	ui_tray_update ();
+}
+
+static void
+on_indicator_clicked (IndicateIndicator *indicator, guint timestamp, gpointer user_data)
+{
+	indicate_indicator_set_property_bool (indicator, "draw-attention", FALSE);
+	liferea_shell_present ();
+	feed_list_view_select ((nodePtr) user_data);
+}
+
+static void
+destroy_indicator (gpointer indicator)
+{
+	if (indicator_priv->server == NULL || indicator == NULL) 
+		return;
+	
+	indicate_server_remove_indicator (indicator_priv->server, INDICATE_INDICATOR(indicator));
+	g_object_unref (G_OBJECT (indicator));
+}
+
+void
+ui_indicator_init ()
+{
+	g_assert (!indicator_priv);
+	indicator_priv = g_new0 (struct indicator_priv, 1);
+	indicator_priv->visible = FALSE;
+	indicator_priv->indicators = g_ptr_array_new_with_free_func (destroy_indicator);
+	
+	indicator_priv->server = indicate_server_ref_default();
+	indicate_server_set_type (indicator_priv->server, "message.im");
+	indicate_server_set_desktop_file (indicator_priv->server, DESKTOP_FILE);
+	
+	g_signal_connect (G_OBJECT (indicator_priv->server), "server-display", G_CALLBACK (on_indicator_server_clicked), NULL);
+	g_signal_connect (G_OBJECT (indicator_priv->server), "server-show", G_CALLBACK (on_indicator_server_shown), NULL);
+	g_signal_connect (G_OBJECT (indicator_priv->server), "server-hide", G_CALLBACK (on_indicator_server_hidden), NULL);
+	
+	indicate_server_show (indicator_priv->server);
+	ui_indicator_update ();
+}
+
+void
+ui_indicator_destroy ()
+{
+	g_ptr_array_set_size (indicator_priv->indicators, 0);
+	g_object_unref (indicator_priv->server);
+	indicator_priv->server = NULL;
+	g_ptr_array_free (indicator_priv->indicators, TRUE);
+	g_free (indicator_priv);
+	indicator_priv = NULL;
+}
+
+static void
+add_node_indicator (nodePtr node)
+{
+	IndicateIndicator *indicator;
+	gchar count[10];
+
+	if (IS_VFOLDER(node)) {
+		// Not a feed - walk children and do nothing more
+		node_foreach_child (node, add_node_indicator);
+		return;
+	}
+
+	if (!node->unreadCount)
+		return;
+	
+	indicator = indicate_indicator_new_with_server (indicator_priv->server);
+	g_signal_connect (indicator, "user-display", G_CALLBACK (on_indicator_clicked), node);
+	sprintf (count, "%u", node->unreadCount);
+	indicate_indicator_set_property (indicator, "name", node->title);
+	indicate_indicator_set_property (indicator, "count", count);
+	indicate_indicator_set_property_bool (indicator, "draw-attention", TRUE);
+	indicate_indicator_show (indicator);
+	g_ptr_array_add (indicator_priv->indicators, indicator);
+}
+
+void
+ui_indicator_update ()
+{
+	if (!indicator_priv)
+		return;
+
+	// Remove all previous indicators from the menu
+	g_ptr_array_set_size (indicator_priv->indicators, 0);
+	// ...then walk the tree and add an indicator for each unread feed
+	feedlist_foreach (add_node_indicator);
+}
+
+gboolean
+ui_indicator_is_visible ()
+{
+	return indicator_priv && indicator_priv->visible;
+}
+
+#else
+
+void ui_indicator_init () {}
+void ui_indicator_destroy () {}
+void ui_indicator_update () {}
+gboolean ui_indicator_is_visible () { return FALSE; }
+
+#endif  /* HAVE_LIBINDICATE */
Index: liferea/src/ui/ui_prefs.c
===================================================================
--- liferea/src/ui/ui_prefs.c	(revision 5359)
+++ liferea/src/ui/ui_prefs.c	(working copy)
@@ -643,13 +643,17 @@
 		conf_get_str_value (BROWSER_COMMAND, &browser_command);
 		entry = liferea_dialog_lookup(prefdialog, "browsercmd");
 		gtk_entry_set_text(GTK_ENTRY(entry), browser_command);
-		g_free (browser_command);
+		g_free (browser_command);	
 
 		gtk_widget_set_sensitive(GTK_WIDGET(entry), tmp==manual);
 		gtk_widget_set_sensitive(liferea_dialog_lookup(prefdialog, "manuallabel"), tmp==manual);	
 
 		/* ================== panel 4 "GUI" ================ */
 
+		// If we have an indicator, we always act as if the tray icon is shown (but it's actually hidden)
+		if (ui_indicator_is_visible ())
+			conf_set_bool_value (SHOW_TRAY_ICON, TRUE);
+
 		conf_get_bool_value (SHOW_TRAY_ICON, &show_tray_icon);
 
 		widget = liferea_dialog_lookup (prefdialog, "popupwindowsoptionbtn");
@@ -659,6 +663,8 @@
 		widget = liferea_dialog_lookup (prefdialog, "trayiconoptionbtn");
 		gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (widget), show_tray_icon);
 
+		gtk_widget_set_visible (gtk_widget_get_parent (widget), !ui_indicator_is_visible ());
+
 		widget = liferea_dialog_lookup (prefdialog, "newcountintraybtn");
 		conf_get_bool_value (SHOW_NEW_COUNT_IN_TRAY, &show_new_count_in_tray);
 		gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (widget), show_new_count_in_tray);
@@ -674,6 +680,10 @@
 		gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (widget), start_in_tray);
 		gtk_widget_set_sensitive (liferea_dialog_lookup (prefdialog, "startintraybtn"), show_tray_icon);
 
+		if (ui_indicator_is_visible ()) {
+			gtk_widget_reparent (widget, gtk_widget_get_parent (liferea_dialog_lookup (prefdialog, "popupwindowsoptionbtn")));
+		}
+
 		/* tool bar settings */	
 		widget = liferea_dialog_lookup (prefdialog, "hidetoolbarbtn");
 		conf_get_bool_value(DISABLE_TOOLBAR, &disable_toolbar);
Index: liferea/src/ui/ui_indicator.h
===================================================================
--- liferea/src/ui/ui_indicator.h	(revision 0)
+++ liferea/src/ui/ui_indicator.h	(revision 0)
@@ -0,0 +1,35 @@
+/*
+ * @file ui_indicator.h  libindicate support
+ *
+ * Copyright (C) 2010 Maia Kozheva <sikon@ubuntu.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Library General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor Boston, MA 02110-1301,  USA
+ */
+
+#ifndef _UI_INDICATOR_H
+#define _UI_INDICATOR_H
+
+#ifdef HAVE_CONFIG_H
+	#include <config.h>
+#endif
+
+#include <glib.h>
+
+void ui_indicator_init ();
+void ui_indicator_destroy ();
+void ui_indicator_update ();
+gboolean ui_indicator_is_visible ();
+
+#endif  /* _UI_INDICATOR_H */
\ No newline at end of file
Index: liferea/src/ui/Makefile.am
===================================================================
--- liferea/src/ui/Makefile.am	(revision 5359)
+++ liferea/src/ui/Makefile.am	(working copy)
@@ -8,7 +8,7 @@
 
 noinst_LIBRARIES = libliui.a
 
-libliui_a_CFLAGS = $(PACKAGE_CFLAGS) $(DBUS_CFLAGS)
+libliui_a_CFLAGS = $(PACKAGE_CFLAGS) $(DBUS_CFLAGS)	$(LIBINDICATE_CFLAGS)
 libliui_a_SOURCES = \
 	auth_dialog.c auth_dialog.h \
 	browser_tabs.c browser_tabs.h \
@@ -27,6 +27,7 @@
 	ui_common.c ui_common.h \
 	ui_dnd.c ui_dnd.h \
 	ui_folder.c ui_folder.h \
+	ui_indicator.c ui_indicator.h \
 	ui_node.c ui_node.h \
 	ui_popup.c ui_popup.h \
 	ui_prefs.c ui_prefs.h \
Index: liferea/configure.ac
===================================================================
--- liferea/configure.ac	(revision 5359)
+++ liferea/configure.ac	(working copy)
@@ -24,6 +24,7 @@
 AC_ARG_ENABLE(dbus,      AS_HELP_STRING([--disable-dbus],[compile without DBUS support]),,enable_dbus=yes)
 AC_ARG_ENABLE(nm,        AS_HELP_STRING([--disable-nm],[compile without NetworkManager support]),,enable_nm=yes)
 AC_ARG_ENABLE(libnotify, AS_HELP_STRING([--disable-libnotify],[compile without libnotify support]),,enable_libnotify=yes)
+AC_ARG_ENABLE(libindicate, AS_HELP_STRING([--disable-libindicate],[compile without libindicate support]),,enable_libindicate=yes)
 dnl AC_ARG_ENABLE(avahi,     AS_HELP_STRING([--disable-avahi],[compile without AVAHI support]),,enable_avahi=yes)
 
 AC_CHECK_FUNCS([strsep])
@@ -56,6 +57,24 @@
 
 AM_CONDITIONAL(WITH_LIBNOTIFY, test "x$enable_libnotify" = "xyes")
 
+dnl *********
+dnl libindicate
+dnl *********
+
+if test "x$enable_libindicate" = "xyes"; then
+   PKG_CHECK_MODULES([LIBINDICATE], indicate,enable_libindicate=yes,enable_libindicate=no)
+   AC_SUBST(LIBINDICATE_CFLAGS)
+   AC_SUBST(LIBINDICATE_LIBS)
+else
+   enable_libindicate=no
+fi
+
+if test "x$enable_libnotify" = "xyes"; then
+  AC_DEFINE(HAVE_LIBINDICATE, 1, [Define if libindicate support is enabled])
+fi
+
+AM_CONDITIONAL(WITH_LIBINDICATE, test "x$enable_libindicate" = "xyes")
+
 dnl *****
 dnl AVAHI
 dnl *****
@@ -192,6 +211,7 @@
 echo "Use DBUS........................ : $enable_dbus"
 echo "Use NetworkManager.............. : $enable_nm"
 echo "Use libnotify................... : $enable_libnotify"
+echo "Use libindicate................. : $enable_libindicate"
 dnl echo "AVAHI Support................... : $enable_avahi"
 echo
 eval eval echo Liferea will be installed in $bindir.
